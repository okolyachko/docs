onCommand handler
=================

Responsible for handling commands sent from the dialog script.

To accompany userâ€™s utterances with activities in the app UI, you can send commands from the dialog scripts to the client app. For example, once the user gives a voice command, another view or page can be opened in the app, a UI element can be selected on the screen and so on.

To send a command, use the ``play()`` function in the dialog script and pass a JSON object to it. The JSON object contains the command name and, optionally, arbitrary data to be provided to the app. To handle the command on the client side, set up the logic in the ``onCommand`` handler in the app.

For details, see :ref:`Sending commands to the app`.

Examples
--------

.. code-block:: alan
   :caption: Dialog script

   intent(`Go to the home page`, p => {
     p.play({command: 'navigation', route: 'home'});
     p.play(`Opening the home page...`);
   });


.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/command-handler-web.rst

.. tabbed:: Objective-C

    .. include:: ../snippets/command-handler-obj.rst

.. tabbed:: Swift

    .. include:: ../snippets/command-handler-swift.rst

.. tabbed:: Kotlin

    .. include:: ../snippets/command-handler-kotlin.rst
		
.. tabbed:: Java

    .. include:: ../snippets/command-handler-java.rst

.. tabbed:: Flutter

    .. include:: ../snippets/command-handler-flutter.rst

.. tabbed:: Ionic

    **Ionic Angular**

    .. include:: ../snippets/command-handler-ionic-angular.rst

    **Ionic React**
	

    .. include:: ../snippets/command-handler-ionic-react.rst
	

    **Ionic Vue**

    
    .. include:: ../snippets/command-handler-ionic-vue.rst
	   
.. tabbed:: React Native
	   
    .. include:: ../snippets/command-handler-rn.rst

	   
.. raw:: html

   <div id="purple-background"></div>