Client API methods
==================

Alan AI exposes a set of client API methods that you can use to enable communication between the client app and Alan AI and trigger activities on the client side.

The client API methods are supported on all platforms:

-  `setVisualState()`_
-  `callProjectApi()`_
-  `playText()`_
-  `sendText()`_
-  `playCommand()`_
-  `activate()`_
-  `deactivate()`_
-  `isActive()`_
-  `remove()`_
-  `getWakewordEnabled()`_
-  `setWakewordEnabled()`_
- `textChat.isAudioOutputEnabled()`_
- `textChat.setAudioOutputEnabled()`_


.. _setVisualState():

setVisualState()
----------------

Sets the visual state for the client app. Use this method to inform the in-app assistant about the app's visual context, for example, the currently active screen, state of the cart and so on. 

In the dialog script, the data passed with this method can be accessed through the :ref:`visual <visual>` object. 
For details, see :doc:`Visual state  <../../server-api/sending-data/visual-state>`.

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   setVisualState(visualStateData:object)

**Parameters**

+-----------------------+------------+------------------------------------------------+
| **Name**              | **Type**   | **Description**                                |
+=======================+============+================================================+
| ``visualStateData``   | object     | JSON object that represents the visual state   |
+-----------------------+------------+------------------------------------------------+


**Examples**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/visual-state-web.rst
	
    **See also**
	
    How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`

.. tabbed:: Objective-C

    .. include:: ../snippets/visual-state-obj.rst
	
    **See also**
	
    How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`

.. tabbed:: Swift

    .. include:: ../snippets/visual-state-swift.rst   
	
    **See also**
	
    - How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`
    - Tutorial: :doc:`Passing the app state to the dialog script <../../tutorials/ios/sending-data-swift>`	

.. tabbed:: Kotlin

    .. include:: ../snippets/visual-state-kotlin.rst
    
    **See also**
	
    How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`	   

.. tabbed:: Java

    .. include:: ../snippets/visual-state-java.rst   
	
    **See also**
	
    How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`	   
	   
.. tabbed:: Flutter

    .. include:: ../snippets/visual-state-flutter.rst 
    
	
    **See also**
	
    - How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`
    - Tutorial: :doc:`Passing the app state to the dialog script <../../tutorials/flutter/sending-data-flutter>`

.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/visual-state-ionic-angular.rst
	
		
    **Ionic React**
	
    .. include:: ../snippets/visual-state-ionic-react.rst

	
    **Ionic Vue**
	
    .. include:: ../snippets/visual-state-ionic-vue.rst
		
		
    **See also**
	
    - How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`
    - Tutorial: :doc:`Passing the app state to the dialog script <../../tutorials/ionic/sending-data-angular/>`
    - :doc:`Communication between components <../cross-platform/ionic-communicating>`
	
	   
.. tabbed:: React Native

    .. include:: ../snippets/visual-state-rn.rst 
	
    **See also**
	
    - How-to: :ref:`Send information about the app visual context to the dialog script <how-to-send-information-about-the-app-visual-context-to-the-voice-script>`
    - Tutorial: :doc:`Passing the app state to the dialog script <../../tutorials/react-native/sending-state-react-native>`	
	   
		
.. _callProjectApi():	
		
callProjectApi()
----------------

Calls a project API method defined in the dialog script in the Alan AI Studio project. Use the project API functionality to:

- Pass arbitrary data from the app to the dialog script
- Trigger activities without a voice or text command

For details, see :doc:`Project API <../../server-api/sending-data/project-api>`.

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   callProjectApi(method:string, data:object, callback:function)
		

**Parameters**

+----------------+------------+------------------------------------------------------------------------+
| **Name**       | **Type**   | **Description**                                                        |
+================+============+========================================================================+
| ``method``     | string     | Project API method name that is defined in the dialog script           |
+----------------+------------+------------------------------------------------------------------------+
| ``data``       | object     | Any object with arbitrary data that must be sent to the dialog script  |
+----------------+------------+------------------------------------------------------------------------+
| ``callback``   | function   | Callback to be called from the project API method                      |
+----------------+------------+------------------------------------------------------------------------+

.. code-block:: alan
   :caption: Dialog script

   projectAPI.setClientData = function(p, param, callback) {
     p.userData.data = param.data;
     callback();
   };
	

**Examples**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/project-api-web.rst
		
    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`

.. tabbed:: Objective-C

    .. include:: ../snippets/project-api-obj.rst
	   
    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`


.. tabbed:: Swift

    .. include:: ../snippets/project-api-swift.rst
	   
    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`
    - Tutorial: :doc:`Triggering dialog script actions without commands <../../tutorials/ios/triggering-info-swift>`

.. tabbed:: Kotlin

    .. include:: ../snippets/project-api-kotlin.rst
	   
    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`
    

.. tabbed:: Java

    .. include:: ../snippets/project-api-java.rst

    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`
    	   

.. tabbed:: Flutter

    .. include:: ../snippets/project-api-flutter.rst
		
    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`
    - Tutorial: :doc:`Sending data to the dialog script <../../tutorials/flutter/project-api-flutter>`
    
	
.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/project-api-ionic-angular.rst
	
		
    **Ionic React**
	
    .. include:: ../snippets/project-api-ionic-react.rst
		

    **Ionic Vue**
	
    .. include:: ../snippets/project-api-ionic-vue.rst
	
		
    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`
    - :doc:`Communication between components <../cross-platform/ionic-communicating>`
	   
.. tabbed:: React Native

    .. include:: ../snippets/project-api-rn.rst
		
    **See also**
	
    - How-to: :ref:`How to send data from the app to the dialog script <how-to-send-data-from-the-app-to-the-voice-script>`
    - How-to: :ref:`How to call a function in the dialog script from the app <how-to-call-a-function-in-the-voice-script-from-the-app>`
    - Tutorial: :doc:`Triggering activities without voice and text commands <../../tutorials/react-native/triggering-activities-react-native>`

.. _playText():		

playText()
----------

Plays a text string passed to the method.

For the in-app assistant to play the text message, make sure the Alan AI button is activated. To check the button state and activate the button programmatically, use the :doc:`onButtonState handler <state-handler>`, `isActive()`_ and `activate()`_ client API methods.

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   playText(text:string)	


**Parameters**

+------------+------------+------------------------------+
| **Name**   | **Type**   | **Description**              |
+============+============+==============================+
| ``text``   | string     | Text message to be played    |
+------------+------------+------------------------------+

**Examples**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/playtext-web.rst
		
    **See also**
	
    How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`
    

.. tabbed:: Objective-C

    .. include:: ../snippets/playtext-obj.rst

.. tabbed:: Swift

    .. include:: ../snippets/playtext-swift.rst
	   
    **See also**
	
    Tutorial: :doc:`Playing a greeting in an iOS Swift app <../../tutorials/ios/greeting-swift>`


.. tabbed:: Kotlin

    .. include:: ../snippets/playtext-kotlin.rst
	   
.. tabbed:: Java

    .. include:: ../snippets/playtext-java.rst
 
.. tabbed:: Flutter

    .. include:: ../snippets/playtext-flutter.rst
		
    **See also**
	
    How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`

		
.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/playtext-ionic-angular.rst

	
    **Ionic React**
	
    .. include:: ../snippets/playtext-ionic-react.rst
		
		
    **Ionic Vue**
	
    .. include:: ../snippets/playtext-ionic-vue.rst
		
    **See also**
	
    - How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`
    - :doc:`Communication between components <../cross-platform/ionic-communicating>`

	   
.. tabbed:: React Native

    .. include:: ../snippets/playtext-rn.rst
   
.. _sendText():		

sendText()
----------

Sends a text string passed to the method to Alan AI as the user's input. 

With this method, you can send text commands to Alan AI and allow users to type their requests instead of saying them with voice. To capture the user's input and Alan AI's response, use the :doc:`onEvent handler<event-handler>` and the :ref:`parsed <parsed-event>` and :ref:`text <text-event>` events.


**Syntax**

.. admonition:: Function syntax
   :class: syntax

   sendText(text:string)	


**Parameters**

+------------+------------+------------------------------------+
| **Name**   | **Type**   | **Description**                    |
+============+============+====================================+
| ``text``   | string     | Text message to be sent to Alan AI |
+------------+------------+------------------------------------+


**Examples**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/sendtext-web.rst
		
.. tabbed:: Objective-C

    .. include:: ../snippets/sendtext-obj.rst

.. tabbed:: Swift

    .. include:: ../snippets/sendtext-swift.rst

.. tabbed:: Kotlin

    .. include:: ../snippets/sendtext-kotlin.rst
	   
.. tabbed:: Java

    .. include:: ../snippets/sendtext-java.rst


.. tabbed:: Flutter

    .. include:: ../snippets/sendtext-flutter.rst
	
	
.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/sendtext-ionic-angular.rst

	
    **Ionic React**
	
    .. include:: ../snippets/sendtext-ionic-react.rst
		
		
    **Ionic Vue**
	
    .. include:: ../snippets/sendtext-ionic-vue.rst
	   
.. tabbed:: React Native

    .. include:: ../snippets/sendtext-rn.rst
	
	
**See also**
	
How-to: :ref:`Send text messages to Alan AI <how-to-send-text-messages-to-alan>`

.. _playCommand():	

playCommand()
-------------

Executes a command locally in the client app. The command is handled by the :doc:`onCommand handler <command-handler>`.

For the AI assistant to play messages provided in the command, make sure the Alan AI button is activated. To check the button state and activate the button programmatically, use the :doc:`onButtonState handler <state-handler>`, `isActive()`_ and `activate()`_ client API methods.

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   playCommand(command:object)

**Parameters**

+---------------+------------+-----------------------------------------+
| **Name**      | **Type**   | **Description**                         |
+===============+============+=========================================+
| ``command``   | object     | JSON object that represents a command   |
+---------------+------------+-----------------------------------------+

**Examples**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/playcommand-web.rst

.. tabbed:: Objective-C

    .. include:: ../snippets/playcommand-obj.rst

.. tabbed:: Swift

    .. include:: ../snippets/playcommand-swift.rst

.. tabbed:: Kotlin

    .. include:: ../snippets/playcommand-kotlin.rst

.. tabbed:: Java

    .. include:: ../snippets/playcommand-java.rst

.. tabbed:: Flutter

    .. include:: ../snippets/playcommand-flutter.rst
		
.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/playcommand-ionic-angular.rst

		
    **Ionic React**
	
    .. include:: ../snippets/playcommand-ionic-react.rst
				
    **Ionic Vue**
	
    .. include:: ../snippets/playcommand-ionic-vue.rst
		
    **See also**
	
    :doc:`Communication between components <../cross-platform/ionic-communicating>`		
		
	   
.. tabbed:: React Native

    .. include:: ../snippets/playcommand-rn.rst
	   
.. _activate():
						
activate()
----------

Activates the Alan AI button programmatically.

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   activate()			


**Example**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/activate-web.rst
		
    **See also**
	
    How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`


.. tabbed:: Objective-C

    .. include:: ../snippets/activate-obj.rst

.. tabbed:: Swift

    .. include:: ../snippets/activate-swift.rst
		
    **See also**
	
    Tutorial: :doc:`Playing a greeting in an iOS Swift app <../../tutorials/ios/greeting-swift>`

.. tabbed:: Kotlin

    .. include:: ../snippets/activate-kotlin.rst
		
.. tabbed:: Java

    .. include:: ../snippets/activate-java.rst

.. tabbed:: Flutter

    .. include:: ../snippets/activate-flutter.rst
		
    **See also**
	
    How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`

		
.. tabbed:: Ionic

    **Ionic Angular**

    .. include:: ../snippets/activate-ionic-angular.rst

		
    **Ionic React**
	
    .. include:: ../snippets/activate-ionic-react.rst
		
    **Ionic Vue**
	
    .. include:: ../snippets/activate-ionic-vue.rst
		
    **See also**
	
    - How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`
    - :doc:`Communication between components <../cross-platform/ionic-communicating>`

	   
.. tabbed:: React Native

    .. include:: ../snippets/activate-rn.rst
		
.. _deactivate():

deactivate()
------------

Deactivates the Alan AI button programmatically.

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   deactivate()

**Example**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/deactivate-web.rst 

.. tabbed:: Objective-C

    .. include:: ../snippets/deactivate-obj.rst 

.. tabbed:: Swift

    .. include:: ../snippets/deactivate-swift.rst 

.. tabbed:: Kotlin

    .. include:: ../snippets/deactivate-kotlin.rst 
	   
.. tabbed:: Java

    .. include:: ../snippets/deactivate-java.rst 

.. tabbed:: Flutter

    .. include:: ../snippets/deactivate-flutter.rst 
		
.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/deactivate-ionic-angular.rst
		
    **Ionic React**
	
    .. include:: ../snippets/deactivate-ionic-react.rst
		
		
    **Ionic Vue**
	
    .. include:: ../snippets/deactivate-ionic-vue.rst

		
    **See also**
	
    - :doc:`Communication between components <../cross-platform/ionic-communicating>`
	   
.. tabbed:: React Native

    .. include:: ../snippets/deactivate-rn.rst		

.. _isActive():		
		
isActive()
----------

Checks the Alan AI button state. Returns ``true`` if the Alan AI button is activated by the user or programmatically or ``false`` if the Alan AI button is deactivated by the user or programmatically.

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   isActive()				

**Example**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/isactive-web.rst
		
    **See also**
	
    How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`

.. tabbed:: Objective-C

    .. include:: ../snippets/isactive-obj.rst

.. tabbed:: Swift

    .. include:: ../snippets/isactive-swift.rst
		
    **See also**
	
    Tutorial: :doc:`Playing a greeting in an iOS Swift app <../../tutorials/ios/greeting-swift>`

.. tabbed:: Kotlin

    .. include:: ../snippets/isactive-kotlin.rst
		
.. tabbed:: Java

    .. include:: ../snippets/isactive-java.rst

.. tabbed:: Flutter

    .. include:: ../snippets/isactive-flutter.rst
		
    **See also**
	
    How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`
		
.. tabbed:: Ionic

    **Ionic Angular**

    .. include:: ../snippets/isactive-ionic-angular.rst
		
    **Ionic React**
	
    .. include:: ../snippets/isactive-ionic-react.rst
		
    **Ionic Vue**
	
    .. include:: ../snippets/isactive-ionic-vue.rst
		
    **See also**
	
    - How-to: :ref:`Activate the Alan AI button programmatically and play a greeting <how-to-activate-the-alan-button-programmatically-and-play-a-greeting>`
    - :doc:`Communication between components <../cross-platform/ionic-communicating>`
		
		
.. tabbed:: React Native

    .. include:: ../snippets/isactive-rn.rst


.. _remove():		
		
remove()
--------

Removes the Alan AI button. 

Use this method to completely remove the Alan AI button from the parent element (page).

.. note::

   At present, this method is supported only on the Web platform.  

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   remove()		
 

**Example**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/remove-web.rst
       

.. tabbed:: Ionic
   
    **Ionic Angular**
	
    .. include:: ../snippets/remove-ionic-angular.rst

	
    **Ionic React**
	
    .. include:: ../snippets/remove-ionic-react.rst
		
    **Ionic Vue**
	
    .. include:: ../snippets/remove-ionic-vue.rst 
		
    **See also**
	
    :doc:`Communication between components <../cross-platform/ionic-communicating>`
	


.. _getWakewordEnabled():

getWakewordEnabled()
--------------------

Checks the state of the wake word for the Alan AI button. Returns ``true`` if the wake word is enabled; ``false`` if the wake word is disabled.

.. note::

   This method is supported on the iOS and Android platforms.  

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   getWakewordEnabled()		
 

**Example**

.. tabbed:: Objective-C

    .. include:: ../snippets/getwakeword-obj.rst 

.. tabbed:: Swift

    .. include:: ../snippets/getwakeword-swift.rst 
	   
.. tabbed:: Kotlin

    .. include:: ../snippets/getwakeword-kotlin.rst 
		
.. tabbed:: Java

    .. include:: ../snippets/getwakeword-java.rst   
	   
.. tabbed:: Flutter

    .. include:: ../snippets/getwakeword-flutter.rst  
	   
.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/getwakeword-ionic-angular.rst
	
    **Ionic React**
	
    .. include:: ../snippets/getwakeword-ionic-react.rst
		
    **Ionic Vue**
	
    .. include:: ../snippets/getwakeword-ionic-vue.rst
	   
.. tabbed:: React Native

    .. include:: ../snippets/getwakeword-rn.rst 	   
	   

.. _setWakewordEnabled():

setWakewordEnabled()
--------------------

Enables or disables the wake word for the Alan AI button.

.. note::

   This method is supported on the iOS and Android platforms.  

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   setWakewordEnabled(enabled:boolean)

**Parameters**

+------------+------------+-----------------------------------------------------------------------+
| **Name**   | **Type**   | **Description**                                                       |
+============+============+=======================================================================+
|``enabled`` | boolean    | Boolean value indicating whether the wake word is enabled or disabled.|
+------------+------------+-----------------------------------------------------------------------+   
 

**Example**

.. tabbed:: Objective-C

    .. include:: ../snippets/setwakeword-obj.rst 

.. tabbed:: Swift

    .. include:: ../snippets/setwakeword-swift.rst
	   
.. tabbed:: Kotlin

    .. include:: ../snippets/setwakeword-kotlin.rst
		
.. tabbed:: Java

    .. include:: ../snippets/setwakeword-java.rst
	   
.. tabbed:: Flutter

    .. include:: ../snippets/setwakeword-flutter.rst
	   
.. tabbed:: Ionic

    **Ionic Angular**
	
    .. include:: ../snippets/setwakeword-ionic-angular.rst
	
    **Ionic React**
	
    .. include:: ../snippets/setwakeword-ionic-react.rst
		
    **Ionic Vue**
	
    .. include:: ../snippets/setwakeword-ionic-vue.rst

	   
.. tabbed:: React Native

    .. include:: ../snippets/setwakeword-rn.rst
	
.. _textChat.isAudioOutputEnabled():
	
textChat.isAudioOutputEnabled() 
-------------------------------

Checks the state of audio output for the Alan AI Chat. Returns ``true`` if audio output is enabled; ``false`` if audio output is disabled.

.. note::

   At present, this method is supported only on the Web platform.  

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   textChat.isAudioOutputEnabled()
 

**Example**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/get-audio-web.rst
	
.. _textChat.setAudioOutputEnabled():
	
textChat.setAudioOutputEnabled()
--------------------------------

Enables or disables audio output for the Alan AI Chat.

.. note::

   At present, this method is supported only on the Web platform.  

**Syntax**

.. admonition:: Function syntax
   :class: syntax

   textChat.setAudioOutputEnabled(enabled:boolean)
 

**Example**

.. tabbed:: Web (React, Angular, etc.)

    .. include:: ../snippets/set-audio-web.rst
       

.. raw:: html

   <div id="purple-background"></div>