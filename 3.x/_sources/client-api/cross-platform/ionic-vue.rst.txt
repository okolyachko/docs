Ionic Vue
=========

**Available on**: :badge:`Web platform,badge-primary` :badge:`Android,badge-danger` :badge:`iOS,badge-danger`

Integrating with Alan AI
------------------------

To integrate an Ionic Vue app with Alan AI, you need to do the following:

1. `Create an Ionic Vue app <#step-1-create-an-ionic-vue-app>`__
2. `Install Alan AI packages <#step-2-install-alan-ai-packages>`__
3. `Add the Alan AI button <#step-3-add-the-alan-ai-button>`__

Step 1. Create an Ionic Vue app
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you want to create an app with a conversational experience from scratch, in the Terminal, run the following commands. Otherwise move on to `step 2 <#step-2-install-alan-packages>`__.

.. code-block:: 
   :caption: Terminal

   npm install -g ionic
   cd <appFolder>
   ionic start <appName> <template> --type vue

For details, see `Ionic documentation <https://ionicframework.com/docs/vue/quickstart>`__.

Step 2. Install Alan AI packages
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You need to install the Alan AI SDK Cordova component and Alan AI Web Component package.


1. Navigate to the folder where your app resides:

   .. code-block::
      :caption: Terminal

      cd appName

2. Install the Alan AI SDK Cordova component:
   
   .. code-block::
      :caption: Terminal
          
      npm install @alan-ai/cordova-plugin-alan-voice --save
		  
3. Install the Alan AI Web Component package:
	
   .. code-block::
      :caption: Terminal
	      
      npm install @alan-ai/alan-button --save

.. note::
      
   To be able to run Ionic apps on mobile devices, you must install the Alan AI button as the :doc:`Web Component <../web/web-component>` using the following packages: ``@alan-ai/alan-button`` and ``@alan-ai/cordova-plugin-alan-voice``. Do not use the ``@alan-ai/alan-sdk-web`` package: it is intended for non cross-platform web apps and pages.
   

Step 3. Add the Alan AI button
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You need to update your app to embed the Alan AI button to it.
	   
	
1. In the ``main.ts`` file, import the Alan AI button component and bind it to the window object:
	
   .. code-block:: typescript
      :caption: main.ts
		
      // Importing the Alan AI button component		
      import {
        applyPolyfills,
        defineCustomElements,
      } from '@alan-ai/alan-button/dist/loader';

      // Binding custom components to the window object
      applyPolyfills().then(() => {
        defineCustomElements();
      });
		 
2. In your Vue component, add the Alan AI button:
	
   .. code-block:: html
      :caption: HomePage.vue
		  		  
      <ion-content :fullscreen="true">
        <alan-button  alan-key="YOUR_KEY_FROM_ALAN_STUDIO_HERE" />
      </ion-content>
		   
3. In ``alan-key``, replace ``YOUR_KEY_FROM_ALAN_STUDIO_HERE`` with the Alan AI SDK key for your Alan AI Studio project. To get the key, in Alan AI Studio, at the top of the code editor, click **Integrations** and copy the value from the **Alan SDK Key** field.
	
   .. code-block:: html
      :caption: HomePage.vue
		  	  
      <ion-content :fullscreen="true">
        <alan-button  alan-key="1c885a6adb85e9d57d43485dbc3cb44a2e956eca572e1d8b807a3e2338fdd0dc/stage" />
      </ion-content>
		   
   
That's it. You can now add voice and text commands to the script in Alan AI Studio, run the app, click the Alan AI button and interact with the app with voice.
   
.. note::
	  
   Regularly update the Alan AI packages your project depends on. To check if a newer version is available, run ``npm outdated``. To update the package, run ``npm update <alan-package-name>``. For more details, see `npm documentation <https://docs.npmjs.com/updating-packages-downloaded-from-the-registry>`__.
   
Specifying the Alan AI button parameters
----------------------------------------

.. include:: ../snippets/button-parameters-ionic.rst

   
Using client API methods
------------------------

You can use the following :doc:`client API methods <../methods/common-api>` in your app:

-  `setVisualState()`_
-  `callProjectApi()`_
-  `playText()`_
-  `sendText()`_
-  `playCommand()`_
-  `activate()`_
-  `deactivate()`_
-  `isActive()`_
-  `remove()`_
-  `getWakewordEnabled()`_
-  `setWakewordEnabled()`_

setVisualState()
~~~~~~~~~~~~~~~~

Use the ``setVisualState()`` method to inform the AI assistant about the appâ€™s visual context. For details, see :ref:`setVisualState() <setVisualState()>`.

.. include:: ../snippets/visual-state-ionic-vue.rst
   
callProjectApi()
~~~~~~~~~~~~~~~~

Use the ``callProjectApi()`` method to send data from the client app to the dialog script and trigger activities without voice and text commands. For details, see :ref:`callProjectApi() <callProjectApi()>`.

.. code-block:: alan
   :caption: Dialog script

   projectAPI.myFunc = function(p, param, callback) {
     console.log(param);
   };

.. include:: ../snippets/project-api-ionic-vue.rst
   
playText()
~~~~~~~~~~

Use the ``playText()`` method to play specific text in the client app. For details, see :ref:`playText() <playText()>`.

.. include:: ../snippets/playtext-ionic-vue.rst


sendText()
~~~~~~~~~~

Use the ``sendText()`` method to send a text message to Alan AI as the user's input. For details, see :ref:`sendText() <sendText()>`.

.. include:: ../snippets/sendtext-ionic-vue.rst
   
playCommand()
~~~~~~~~~~~~~

Use the ``playCommand()`` method to execute a specific command in the client app. For details, see :ref:`playCommand() <playCommand()>`.

.. include:: ../snippets/playcommand-ionic-vue.rst
   
   
activate()
~~~~~~~~~~

Use the ``activate()`` method to activate the Alan AI button programmatically. For details, see :ref:`activate() <activate()>`.

.. include:: ../snippets/activate-ionic-vue.rst
   
deactivate()
~~~~~~~~~~~~

Use the ``deactivate()`` method to deactivate the Alan AI button programmatically. For details, see :ref:`deactivate() <deactivate()>`.

.. include:: ../snippets/deactivate-ionic-vue.rst
   
isActive()
~~~~~~~~~~

Use the ``isActive()`` method to check the Alan AI button state: active or not. For details, see :ref:`isActive() <isActive()>`.

.. include:: ../snippets/isactive-ionic-vue.rst
   
   
remove()
~~~~~~~~

Use the ``remove()`` method to remove the Alan AI button from the parent element. For details, see :ref:`remove() <remove()>`.

.. include:: ../snippets/remove-ionic-vue.rst

getWakewordEnabled()
~~~~~~~~~~~~~~~~~~~~

Use the ``getWakewordEnabled()`` method to check the state of the wake word for the Alan AI button. For details, see :ref:`getWakewordEnabled() <getWakewordEnabled()>`.

.. include:: ../snippets/getwakeword-ionic-vue.rst 
   
setWakewordEnabled()
~~~~~~~~~~~~~~~~~~~~

Use the ``setWakewordEnabled()`` method to enable or disable the wake word for the Alan AI button. For details, see :ref:`setWakewordEnabled() <setWakewordEnabled()>`.

.. include:: ../snippets/setwakeword-ionic-vue.rst


Using handlers
--------------

You can use the following :doc:`Alan AI handlers <../methods/handlers>` in your app:

-  `onCommand handler`_
-  `onButtonState handler`_
-  `onConnectionStatus handler`_
-  `onEvent handler`_

onCommand handler
~~~~~~~~~~~~~~~~~

Use the ``onCommand`` handler to :ref:`handle commands sent from the dialog script <Sending commands to the app>`. For details, see :doc:`onCommand handler <../methods/command-handler>`.

.. include:: ../snippets/command-handler-ionic-vue.rst

onButtonState handler
~~~~~~~~~~~~~~~~~~~~~

Use the ``onButtonState`` handler to capture and handle the Alan AI button state changes. For details, see :doc:`onButtonState handler <../methods/state-handler>`.

.. include:: ../snippets/state-handler-ionic-vue.rst
onConnectionStatus handler
~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the ``onConnectionStatus`` handler to capture and handle the connection status for the virtual assistant project. For details, see :doc:`onConnectionStatus handler <../methods/connection-handler>`.

.. include:: ../snippets/connection-handler-ionic-vue.rst

onEvent handler
~~~~~~~~~~~~~~~

Use the ``onEvent`` handler to capture and handle events emitted by Alan AI: get user's utterances, assistant responses and so on. For details, see :doc:`onEvent handler <../methods/event-handler>`.

.. include:: ../snippets/event-handler-ionic-vue.rst


What's next?
------------

.. panels::
   :column: col-lg-12 col-md-12 col-sm-6 col-xs-12 p-2

   ---
   :card: border-0 + custom-style-res + git
   
   .. link-button:: https://github.com/alan-ai/alan-sdk-ionic/tree/master/examples
      :type: url
      :text: 
      :classes: stretched-link panel
	  
   .. raw:: html
      
	  <p style="font-weight: 600">Example apps</p>
   
   Find and explore examples of AI assistants in Alan AI GitHub.


.. raw:: html

   <div id="purple-background"></div>