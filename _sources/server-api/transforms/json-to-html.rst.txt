JSON to HTML
============

Let's assume you have a JSON-formatted list of apartments. When the user asks: ``Show available apartments``, you want to display these appartments in an aesthetic format.

For this, you can do the following:
   
1. Add a transform named ``render`` with the following rules:
   
   - **Instruction**: ``The input contains the apartment description in JSON, the query contains sample questions, the result contains formatted text``
      
   - **Input**: ``{"name": "Luxury Penthouse with Panoramic Views", "location": "789 Skyline Drive, Metropolis", "price": "$1,200,000", "bedrooms": 3, "bathrooms": 3, "image": "https://vmts.ch/wp-content/uploads/2017/06/Hallenbad_2-1.jpg", "url": "https://vmts.ch/en/portfolio/project-hallenbad/"}``, input format: **JSON**
	  
   - **Query**: ``Show available apartments``, ``What apartments do you offer?``
      
   - **Result**: example of output data, output format: **HTML**
	  
     .. code-block:: html
        :caption: Result field

        <div>
          <img src="https://vmts.ch/wp-content/uploads/2017/06/Hallenbad_2-1.jpg" alt="Luxury Penthouse with Panoramic Views">
          <h4>Luxury Penthouse with Panoramic Views</h4>
          <p>Apartment details</p>:
          <ul>
            <li><b>Location:</b>789 Skyline Drive, Metropolis</li>
            <li><b>Price:</b> $1,200,000</li>
            <li><b>Bedrooms:</b> 3</li>
            <li><b>Bathrooms:</b> 3</li>
          </ul>
          <p><a href="https://vmts.ch/en/portfolio/project-hallenbad/">Learn more</a></p>
        </div>
        <br/>
		   
   .. image:: /_static/assets/img/script-concepts/transforms-render-template.png 

2. Add the following code to your dialog script:
   
   .. code-block:: alan
      :caption: Dialog script
		 
      let data = {
          "properties": [
              {
                  "name": "Modern Apartment in the City Center",
                  "location": "123 Main Street, Cityville",
                  "price": "$500,000",
                  "bedrooms": 2,
                  "bathrooms": 2,
                  "image": "https://vmts.ch/wp-content/uploads/2017/06/v1.jpg", 
                  "url": "https://vmts.ch/en/portfolio/project-gasterzimmer/"
              },
              {
                  "name": "Suburban Family Home",
                  "location": "456 Oak Avenue, Suburbia",
                  "price": "$750,000",
                  "bedrooms": 4,
                  "bathrooms": 3,
                  "image": "https://vmts.ch/wp-content/uploads/2017/05/7-2.jpg", 
                  "url": "https://vmts.ch/en/portfolio/project-niederteufen/"
              },
              {
                  "name": "Luxury Penthouse with Panoramic Views",
                  "location": "789 Skyline Drive, Metropolis",
                  "price": "$1,200,000",
                  "bedrooms": 3,
                  "bathrooms": 3,
                  "image": "https://vmts.ch/wp-content/uploads/2017/06/Hallenbad_2-1.jpg",
                  "url": "https://vmts.ch/en/portfolio/project-hallenbad/"
              }
          ]
      }

      intent("Show available apartments", async p => {
          p.play("Just a second...");

          // Transform apartments data
          let a = await transforms.render({
              input: data,
              query: 'Show available apartments'
          });
          p.play(a);
      });
		 
   Here, the apartments data in JSON format are saved to ``data``. When the user asks to show available apartments, the apartments data is rendered and presented using the defined template:
	 
   .. image:: /_static/assets/img/script-concepts/transforms-render.png
  
.. raw:: html

   <div id="green-background"></div>