Plain text to markdown
======================

Let's assume you have the infrastructure description presented as text. You want your AI assistant to be able to answer questions about the infrastructure components and show their details as structured and formatted text in the Alan AI Chat. 
   
For this, you can do the following:
   
1. Add a transform named ``format`` with the following rules:
   
   
   **Example 1**
   
   - **Instruction**: ``The input contains the infrastructure description in plain text, the query contains sample questions, the result contains formatted text``
      
   - **Input**: ``Web Server VM (Web-01): hosting the company website, Ubuntu Server 20.04, 4 vCPUs, 8GB RAM, IP address 192.168.1.101``, input format: **text**
	  
   - **Query**: ``What is the Web-01 configuration?``
      
   - **Result**: example of output data, output format: **markdown**:
	  
     .. code-block:: markdown
        :caption: Result field
	  
        ## VM name: Web Server VM (Web-01)

        - **Purpose**: Hosting the company website.
        - **Configuration**: 
          - **OS**: Ubuntu Server 20.04
          - **Resources**: 4 vCPUs, 8GB RAM
          - **IP Address**: 192.168.1.101
			 
   **Example 2**
   
   - **Instruction**: ``The input contains the infrastructure description in plain text, the query contains sample questions, the result contains formatted text``
      
   - **Input**: ``Web Server VM (Web-01): hosting the company website, Ubuntu Server 20.04, 4 vCPUs, 8GB RAM, IP address 192.168.1.101``, input format: **text**
	  
   - **Query**: ``What OS does the Web-01 VM run?``
      
   - **Result**: example of output data: ``The **Web-01** runs **Ubuntu Server 20.04**``, output format: **markdown**
		   
   .. image:: /_static/assets/img/script-concepts/transforms-format.png 
	  
2. Add the following code to your dialog script:
   
   .. code-block:: alan
      :caption: Dialog script
		 
      let infrastructure = `

          Data Center: Main Data Center

          Virtual Machines:
          1. Web Server VM (Web-01): hosting the company website, Ubuntu Server 20.04, 4 vCPUs, 8GB RAM, IP address 192.168.1.101
          2. App Server VM (App-01): running business applications, CentOS 7, 2 vCPUs, 4GB RAM, IP address: 192.168.1.102
          3. Database Server VM (DB-01): hosting relational databases, Windows Server 2019, 8 vCPUs, 16GB RAM, IP address: 192.168.1.103
      `;

      intent("Show the $(VM* .+ ) configuration", async p => {
          p.play("Just a second...");
                 
              // Transform review data
              let i = await transforms.format({
                  input: infrastructure,
                  query: 'What is the configuration of ' + p.VM.value
              });
          p.play(i);
      });

      intent(
          "(What|How many) $(RESOURCE* .+) does $(VM* .+) (run|have)?",
          "(What|How much|How many) $(RESOURCE* .+) (is|are) (available|) on $(VM* .+)?",
          async p => {
              p.play("Just a second...");
        
             // Transform review data
             let i = await transforms.format({
                 input: infrastructure,
                 query: p.RESOURCE.value + ' available on ' + p.VM.value
             });
             p.play(i);
         });
		 
   Here, the infrastructure description in plain text is saved to ``infrastructure``. When the user asks to show the configuration of a specific VM or asks about resources available on a specific VM, a corresponding intent is invoked and the text is transformed to the necessary format:
	 
	 
   .. image:: /_static/assets/img/script-concepts/transforms-format-example.png

  
.. raw:: html

   <div id="green-background"></div>