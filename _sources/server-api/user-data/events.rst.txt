User events
===========

Alan AI emits several types of events driven by users’ interactions with the AI assistant. You can listen to these events with the :ref:`onUserEvent()` callback and perform the activities needed for your assistant logic.
   
.. note::
   
   The user statistics is updated after the user dialog session is closed.
   
Types of events
---------------

You can use the following events in your dialog script:

.. tabbed:: Web

   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | **Event name**                                         | **Description**                                                                                                |
   +========================================================+================================================================================================================+
   | `buttonClicked <#button-clicked-web>`__                | Fired when the user clicks the AI assistant button in the app                                                  |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `buttonReady <#button-ready-web>`__                    | Fired when Alan AI connects to the virtual assistant project and is ready to listen to the user’s input        |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `firstActivate <#first-activate-web>`__                | Fired when the user activates the AI assistant for the first time during the dialog session                    |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `firstClick <#first-click-web>`__                      | Fired when the user clicks the AI assistant button for the first time during the dialog session                |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `micAllowed <#mic-allowed-web>`__                      | Fired when the user allows access to the microphone                                                            |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `micPermissionPrompt <#mic-prompt-web>`__              | Fired when a prompt to allow access to the microphone is displayed                                             |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `popupCloseClicked <#popup-close-web>`__               | Fired when the user clicks the close icon in the :doc:`Alan AI button popup <../popups>`                       |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `recognized <#recognized-web>`__                       | Fired during and upon the user's input recognition                                                             |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   | `showPopup <#show-popup-web>`__                        | Fired when a :doc:`popup <../popups>`  next to the AI assistant button is displayed                            |
   +--------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+
   
   In the example below, the AI assistant listens to the ``firstActivate`` event and, if the last interaction with the user occurred earlier than one day ago, plays a greeting to the user.
   
   .. code-block:: alan
      :caption: Dialog script
	  
      function diffFrom(ts, units) {
          let last = DateTime.fromMillis(ts);
          let now  = DateTime.local();
          console.log(`now.diff(last): ${now.diff(last)}`);
          console.log(`units: ${units}, now.diff(last).as(units): ${now.diff(last).as(units)}`);
          return now.diff(last).as(units);    
      }

      onUserEvent((p, e) => {
          console.info('event', JSON.stringify(e));
          if (e.event == 'firstActivate') {
              if (diffFrom(e.userInfo.lastInteractionTs, 'days') > 1) {
                  p.play('(Hi|Hi there|Hello), I am Alan, your AI assistant. Ask any question or tell me what you would like to do');
              }
          }
      });
	  
   .. raw:: html
   
      <h3 id="button-clicked-web" class="anchor-fixed">buttonClicked event</h3>
   
   .. include:: ../snippets/button-clicked.rst

   .. raw:: html
   
      <h3 id="button-ready-web" class="anchor-fixed">buttonReady event</h3>
   
   .. include:: ../snippets/button-ready.rst
   
   .. raw:: html
   
      <h3 id="first-activate-web" class="anchor-fixed">firstActivate event</h3>
 
   .. include:: ../snippets/first-activate.rst
   
   .. raw:: html
   
      <h3 id="first-click-web" class="anchor-fixed">firstClick event</h3>
 
   .. include:: ../snippets/first-click.rst
   
   .. raw:: html
   
      <h3 id="mic-allowed-web" class="anchor-fixed">micAllowed event</h3>
 
   .. include:: ../snippets/mic-allowed.rst
   
   .. raw:: html
   
      <h3 id="mic-prompt-web" class="anchor-fixed">micPermissionPrompt event</h3>
   
   .. include:: ../snippets/mic-prompt.rst
   
   .. raw:: html
   
      <h3 id="recognized-web" class="anchor-fixed">recognized event</h3>
 
   .. include:: ../snippets/recognized.rst
   
   .. raw:: html
   
      <h3 id="popup-close-web" class="anchor-fixed">popupCloseClicked event</h3>
 
   .. include:: ../snippets/popup-close.rst
   
   .. raw:: html
   
      <h3 id="show-popup-web" class="anchor-fixed">showPopup event</h3>
 
   .. include:: ../snippets/show-popup.rst
   

.. tabbed:: iOS/Android

   +--------------------------------------------------------+------------------------------------------------------------------------------------------------------------------+
   | **Event name**                                         | **Description**                                                                                                  |
   +========================================================+==================================================================================================================+
   | `buttonReady <#button-ready-mobile>`__                 | Fired when Alan AI connects to the virtual assistant project and is ready to listen to the user’s input          |
   +--------------------------------------------------------+------------------------------------------------------------------------------------------------------------------+
   | `firstClick <#first-click-mobile>`__                   | Fired when the user clicks the AI assistant button for the first time during the dialog session                  |
   +--------------------------------------------------------+------------------------------------------------------------------------------------------------------------------+
   | `micAllowed <#mic-allowed-mobile>`__                   | Fired when the user allows access to the microphone                                                              |
   +--------------------------------------------------------+------------------------------------------------------------------------------------------------------------------+
   | `micPermissionPrompt <#mic-prompt-mobile>`__           | Fired when a prompt to allow access to the microphone is displayed                                               |
   +--------------------------------------------------------+------------------------------------------------------------------------------------------------------------------+
   | `recognized <#recognized-mobile>`__                    | Fired during and upon the user's input recognition                                                               |
   +--------------------------------------------------------+------------------------------------------------------------------------------------------------------------------+
   
   
   In the example below, the AI assistant listens to the ``firstClick`` event and, if the last interaction with the user occurred earlier than one day ago, plays a greeting to the user.

   .. code-block:: alan
      :caption: Dialog script
	  
      function diffFrom(ts, units) {
          let last = DateTime.fromMillis(ts);
          let now  = DateTime.local();
          console.log(`now.diff(last): ${now.diff(last)}`);
          console.log(`units: ${units}, now.diff(last).as(units): ${now.diff(last).as(units)}`);
          return now.diff(last).as(units);    
      }

      onUserEvent((p, e) => {
          console.info('event', JSON.stringify(e));
          if (e.event == 'firstClick') {
              if (diffFrom(e.userInfo.lastInteractionTs, 'days') > 1) {
                  p.play('(Hi|Hi there|Hello), I am Alan, your AI assistant. Ask any question or tell me what you would like to do');
             }
          }
      });


   .. raw:: html
   
      <h3 id="button-ready-mobile" class="anchor-fixed">buttonReady event</h3>
   
   .. include:: ../snippets/button-ready.rst
   
   .. raw:: html
   
      <h3 id="first-click-mobile" class="anchor-fixed">firstClick event</h3>
 
   .. include:: ../snippets/first-click.rst
   
   .. raw:: html
   
      <h3 id="mic-allowed-mobile" class="anchor-fixed">micAllowed event</h3>
 
   .. include:: ../snippets/mic-allowed.rst
   
   .. raw:: html
   
      <h3 id="mic-prompt-mobile" class="anchor-fixed">micPermissionPrompt event</h3>
   
   .. include:: ../snippets/mic-prompt.rst
   
   .. raw:: html
   
      <h3 id="recognized-mobile" class="anchor-fixed">recognized event</h3>
 
   .. include:: ../snippets/recognized.rst


.. raw:: html

   <div id="green-background"></div>